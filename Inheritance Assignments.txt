inheritance Assignments


Q2.

package pack1;

class base 
{
	base()
	{
		System.out.println("base constructor");
	}
}

class sub1 extends base
{
	sub1()
	{
		System.out.println("sub1 constructor");
	}
}

class sub2 extends sub1
{
	sub2()
	{
		System.out.println("sub2 constructor");
	}
}


public class demo11 
{
	public static void main(String[] args) 
	{
		sub2 s=new sub2();
	}

}


         *******************************
Q2.

package pack1;

class vehical 
{
	public void start()
	{
		System.out.println("vehical start");
	}
}

class fourwheeler extends vehical
{
	public void start()
	{
		System.out.println("child start");
	}
}



public class demo11 
{
	public static void main(String[] args) 
	{
		vehical s=new fourwheeler();
		s.start();
	}

}


***********************************

Q3

package pack1;

class base
{
	base()
	{
		System.out.println("base constructor");
	}
}

class sub1 extends base
{
	sub1()
	{
		System.out.println("sub1 constructor");
	}
}

class sub2 extends base
{
	sub2()
	{
		System.out.println("sub2 constructor");
	}
}


public class demo11 
{
	public static void main(String[] args) 
	{
		sub1 s=new sub1();
		sub2 s1=new sub2();
		
	}

}
***************************************

Q4

package pack1;

class top1
{
	public void disp1()
	{
		System.out.println("in a top1");
	}
}

class bottom1 extends top1
{
	public void disp1()
	{
		System.out.println("in a bottom1");
	}
}

class bottom2 extends top1
{
	public void disp1()
	{
		System.out.println("in a bottom2");
	}
}

class bottom3 extends top1
{
	public void disp1()
	{
		System.out.println("in a bottom3");
	}
}

public class demo11 
{
	public static void main(String[] args) 
	{
		top1 s=new bottom3();
		s.disp1();
		
	}

}

****************************************
package assigninheri;

abstract class shape1
{
	abstract void draw();
}

class polygon extends shape1
{
	void draw()
	{
		System.out.println("Drawing in Polygon");
	}
}
class circle extends shape1
{
	void draw()
	{
		System.out.println("Drawing in Circle");
	}	
}
class traingle extends shape1
{
	void draw()
	{
		System.out.println("Drawing in Triangle");
	}
}

public class demo
{
	public static void main(String args[])
	{	
		
		shape1 arr[]=new shape1[3];
		arr[0]= new polygon();
		arr[1]=new circle();
		arr[2]=new traingle();
		
		
		for(int i=0;i<arr.length;i++)
		{
			arr[i].draw();
			
		}
		
		
	}
}
**************************************************************************
Q.6)
Ans:

interface A
{
	void disp1();
}
interface B extends A
{
	void disp2();
}

class c implements B
{
	void disp()
	{
		System.out.println("In a class");
	}


	public void disp1() {System.out.println("interface 1");}
		// TODO Auto-generated method stub
		
	

	
	public void disp2() {System.out.println("interface 2");}
		// TODO Auto-generated method stub
		
	
}
public class demo6 
{

	public static void main(String[] args) 
	{
		c s=new c();
		s.disp();
		s.disp1();
		s.disp2();

	}

}

******************************************************************************
Q.7)

interface parent2
{
	void disp2();
}

class parent1
{
	void disp1()
	{
	    System.out.println("In a parent1 class");
	}
}


class child extends parent1 implements parent2
{
	void disp()
	{
		System.out.println("In a class");
	}
	
	public void disp2()
	{
	    System.out.println("interface 2");
	    
	}
	
}
public class demo6 
{

	public static void main(String[] args) 
	{
		child s=new child();
		s.disp();
		s.disp1();
		s.disp2();

	}

}

